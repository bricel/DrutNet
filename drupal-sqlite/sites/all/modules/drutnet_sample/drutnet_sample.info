core = "6.x"
dependencies[] = "features"
dependencies[] = "file_form"
dependencies[] = "file_service"
dependencies[] = "filefield"
dependencies[] = "menu_service"
dependencies[] = "node_service"
dependencies[] = "search"
dependencies[] = "search_service"
dependencies[] = "services"
dependencies[] = "services_keyauth"
dependencies[] = "system_service"
dependencies[] = "taxonomy"
dependencies[] = "taxonomy_service"
dependencies[] = "user_service"
dependencies[] = "views"
dependencies[] = "views_service"
dependencies[] = "xmlrpc_server"
description = "Add content type views and permission to test Drutnet API"
features[content][] = "drutnet_sample-field_file"
features[node][] = "drutnet_sample"
features[user][] = "access all views"
features[user][] = "administer search service"
features[user][] = "administer taxonomy from remote"
features[user][] = "change own username"
features[user][] = "check module exists from remote"
features[user][] = "clear cache from remote"
features[user][] = "create new users"
features[user][] = "delete any user"
features[user][] = "delete own user"
features[user][] = "get any binary files"
features[user][] = "get any user data"
features[user][] = "get available services"
features[user][] = "get own binary files"
features[user][] = "get own user data"
features[user][] = "get variable from remote"
features[user][] = "load node data"
features[user][] = "log a system message from remote"
features[user][] = "save file information"
features[user][] = "set variable from remote"
features[user][] = "update any user data"
features[user][] = "update own user data"
features[user][] = "upload files via file form"
name = "drutnet_sample"
package = "Features"
project = "drutnet_sample"
version = "6.x-1.0-beta1"
