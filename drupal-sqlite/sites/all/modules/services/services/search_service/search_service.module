<?php
// $Id: search_service.module,v 1.1.4.19.2.3 2010/02/28 01:15:31 heyrocker Exp $
/**
 * @file
 *  Link general search functionalities to services module.
 */

/**
 * Implementation of hook_perm().
 */
function search_service_perm() {
  $perms = array('administer search service');

  return $perms;
}

/**
 * Implementation of hook_menu().
 */
function search_service_menu() {
  $items = array();
  $items['admin/settings/search_service'] = array(
    'title'            => t('Search Service'),
    'description'      => t('Configure search service.'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('search_service_admin'),
    'file'             => 'search_service_admin.inc',
    'access arguments' => array('administer search service'),
  );

  return $items;
}


/**
 * Implementation of hook_service().
 */
function search_service_service() {
  global $conf;
  if (!isset($conf['search_service_options'])) {
    drupal_set_message(t('Please configure <a href="@settings">search_service settings</a> to choose search methods to return with this method.', array('@settings' => url('admin/settings/search_service'))), 'error');
  }
  return array(
    array(
      '#method'           => 'search.nodes',
      '#callback'         => 'search_service_nodes',
      '#access arguments' => array('search content'),
      '#file'             => array('file' => 'inc', 'module' => 'search_service'),
      '#args'             => array(
        array(
          '#name'         => 'search_keys',
          '#type'         => 'string',
          '#description'  => t('Search keys.'),
        ),
        array(
          '#name'         => 'simple',
          '#type'         => 'string',
          '#optional'     => TRUE,
          '#description'  => t('If set, returns only the main search fields (link, type, title, user, date, snippet) and no additional data.'),
        ),
        array(
          '#name'         => 'fields',
          '#type'         => 'array',
          '#optional'     => TRUE,
          '#description'  => t('A list of fields to filter.'),
        ),
      ),
      '#return'   => 'array',
      '#help'     => t('Searches nodes according to keys via node_search.'),
    ),
    array(
      '#method'           => 'search.content',
      '#callback'         => 'search_service_content',
      '#access arguments' => array('search content'),
      '#file'             => array('file' => 'inc', 'module' => 'search_service'),
      '#args'             => array(
        array(
          '#name'         => 'search_keys',
          '#type'         => 'string',
          '#description'  => t('Search keys.'),
        ),
        array(
          '#name'         => 'simple',
          '#type'         => 'string',
          '#optional'     => TRUE,
          '#description'  => t('If set, returns only the main search fields (link, type, title, user, date, snippet) and no additional data.'),
        ),
      ),
      '#return'   => 'array',
      '#help'     => t('Uses hook_search() selected under /admin/settings/search_service.'),
    ),
    array(
      '#method'   => 'search.users',
      '#callback' => 'search_service_users',
      '#access arguments' => array('search content'),
      '#file'             => array('file' => 'inc', 'module' => 'search_service'),
      '#args'     => array(
        array(
          '#name'         => 'search_keys',
          '#type'         => 'string',
          '#description'  => t('Search keys.'),
        ),
      ),
      '#return'   => 'array',
      '#help'     => t('Searches users according to keys via hook_search.'),
    )
  );
}