<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>